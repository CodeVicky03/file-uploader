{"ast":null,"code":"var _jsxFileName = \"E:\\\\file-uploader\\\\uploader\\\\src\\\\App.js\";\nimport filename from \"./fileicon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  function upload(e) {\n    const data = {\n      Name: e.target.files[0].name,\n      Size: e.target.files[0].size\n    };\n    if (e.target.files[0].size >= 1024) console.log(e.target.files[0].size / 1024 + \"KB\");\n    fetch(\"http://localhost:3005/sendfiles\", {\n      method: 'post',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"box\",\n      htmlFor: \"upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: filename,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"upload\",\n        size: 500,\n        hidden: true,\n        onChange: e => upload(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"one\",\n        children: \"Drop your file or image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"two\",\n        children: \"Maximum  file size 500 MP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["filename","jsxDEV","_jsxDEV","App","upload","e","data","Name","target","files","name","Size","size","console","log","fetch","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","src","alt","type","id","hidden","onChange","_c","$RefreshReg$"],"sources":["E:/file-uploader/uploader/src/App.js"],"sourcesContent":["import filename from \"./fileicon.png\"\n\nfunction App() {\n\n    function upload(e){\n\n      const data = {\n        Name : e.target.files[0].name,\n        Size : e.target.files[0].size,\n      }\n\n      if(e.target.files[0].size >= 1024)(\n        console.log((e.target.files[0].size / 1024) + \"KB\")\n      )\n\n      fetch(\"http://localhost:3005/sendfiles\", {\n        method: 'post',\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body : JSON.stringify(data)\n      })\n    }\n\n  return (\n    <div className='file'>\n      <p>Upload file</p>\n      <label className='box'htmlFor=\"upload\">\n      <img src={filename} alt=\"\"/>\n        <input type='file' id='upload' size={500} hidden onChange={(e)=> upload(e)}/>\n        <p className=\"one\">Drop your file or image</p>\n        <p className=\"two\">Maximum  file size 500 MP</p>\n      </label>      \n      <div className='output'></div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAEX,SAASC,MAAMA,CAACC,CAAC,EAAC;IAEhB,MAAMC,IAAI,GAAG;MACXC,IAAI,EAAGF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI;MAC7BC,IAAI,EAAGN,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACG;IAC3B,CAAC;IAED,IAAGP,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI,IAAI,IAAI,EAC/BC,OAAO,CAACC,GAAG,CAAET,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI,GAAG,IAAI,GAAI,IAAI,CAAC;IAGrDG,KAAK,CAAC,iCAAiC,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACd,IAAI;IAC5B,CAAC,CAAC;EACJ;EAEF,oBACEJ,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBpB,OAAA;MAAAoB,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClBxB,OAAA;MAAOmB,SAAS,EAAC,KAAK;MAAAM,OAAO,EAAC,QAAQ;MAAAL,QAAA,gBACtCpB,OAAA;QAAK0B,GAAG,EAAE5B,QAAS;QAAC6B,GAAG,EAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC1BxB,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,QAAQ;QAACnB,IAAI,EAAE,GAAI;QAACoB,MAAM;QAACC,QAAQ,EAAG5B,CAAC,IAAID,MAAM,CAACC,CAAC;MAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7ExB,OAAA;QAAGmB,SAAS,EAAC,KAAK;QAAAC,QAAA,EAAC;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9CxB,OAAA;QAAGmB,SAAS,EAAC,KAAK;QAAAC,QAAA,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACRxB,OAAA;MAAKmB,SAAS,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAACQ,EAAA,GAlCQ/B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
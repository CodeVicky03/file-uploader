{"ast":null,"code":"var _jsxFileName = \"E:\\\\file-uploader\\\\uploader\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport filename from \"./fileicon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setfile] = useState('');\n  function upload(e) {\n    setfile([...file, e.target.files]);\n    const data = {\n      fileName: file[0].name,\n      Type: file[0].type,\n      Size: file[0].size\n    };\n    fetch(\"http://localhost:3005/sendfiles\", {\n      method: 'post',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"box\",\n      htmlFor: \"upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: filename,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"upload\",\n        size: 500,\n        hidden: true,\n        onChange: e => upload(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"one\",\n        children: \"Drop your file or image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"two\",\n        children: \"Maximum  file size 500 MP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9EgvNrBqq8/a8JNmN/RuLtx/ljY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","filename","jsxDEV","_jsxDEV","App","_s","file","setfile","upload","e","target","files","data","fileName","name","Type","type","Size","size","fetch","method","headers","body","JSON","stringify","className","children","_jsxFileName","lineNumber","columnNumber","htmlFor","src","alt","id","hidden","onChange","_c","$RefreshReg$"],"sources":["E:/file-uploader/uploader/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport filename from \"./fileicon.png\"\n\nfunction App() {\n\n  const [file, setfile] = useState('')\n\n    function upload(e){\n\n      setfile([...file, e.target.files])\n\n      const data = {\n        fileName : file[0].name,\n        Type : file[0].type,\n        Size : file[0].size\n      }\n\n      fetch(\"http://localhost:3005/sendfiles\", {\n        method: 'post',\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body : JSON.stringify(data)\n      })\n    }\n\n  return (\n    <div className='file'>\n      <p>Upload file</p>\n      <label className='box'htmlFor=\"upload\">\n      <img src={filename} alt=\"\"/>\n        <input type='file' id='upload' size={500} hidden onChange={(e)=> upload(e)}/>\n        <p className=\"one\">Drop your file or image</p>\n        <p className=\"two\">Maximum  file size 500 MP</p>\n      </label>      \n      <div className='output'></div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElC,SAASQ,MAAMA,CAACC,CAAC,EAAC;IAEhBF,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;IAElC,MAAMC,IAAI,GAAG;MACXC,QAAQ,EAAGP,IAAI,CAAC,CAAC,CAAC,CAACQ,IAAI;MACvBC,IAAI,EAAGT,IAAI,CAAC,CAAC,CAAC,CAACU,IAAI;MACnBC,IAAI,EAAGX,IAAI,CAAC,CAAC,CAAC,CAACY;IACjB,CAAC;IAEDC,KAAK,CAAC,iCAAiC,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACZ,IAAI;IAC5B,CAAC,CAAC;EACJ;EAEF,oBACET,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBvB,OAAA;MAAAuB,QAAA,EAAG;IAAW;MAAAb,QAAA,EAAAc,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClB1B,OAAA;MAAOsB,SAAS,EAAC,KAAK;MAAAK,OAAO,EAAC,QAAQ;MAAAJ,QAAA,gBACtCvB,OAAA;QAAK4B,GAAG,EAAE9B,QAAS;QAAC+B,GAAG,EAAC;MAAE;QAAAnB,QAAA,EAAAc,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC1B1B,OAAA;QAAOa,IAAI,EAAC,MAAM;QAACiB,EAAE,EAAC,QAAQ;QAACf,IAAI,EAAE,GAAI;QAACgB,MAAM;QAACC,QAAQ,EAAG1B,CAAC,IAAID,MAAM,CAACC,CAAC;MAAE;QAAAI,QAAA,EAAAc,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7E1B,OAAA;QAAGsB,SAAS,EAAC,KAAK;QAAAC,QAAA,EAAC;MAAuB;QAAAb,QAAA,EAAAc,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9C1B,OAAA;QAAGsB,SAAS,EAAC,KAAK;QAAAC,QAAA,EAAC;MAAyB;QAAAb,QAAA,EAAAc,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAhB,QAAA,EAAAc,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACR1B,OAAA;MAAKsB,SAAS,EAAC;IAAQ;MAAAZ,QAAA,EAAAc,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAhB,QAAA,EAAAc,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAACxB,EAAA,CAnCQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}